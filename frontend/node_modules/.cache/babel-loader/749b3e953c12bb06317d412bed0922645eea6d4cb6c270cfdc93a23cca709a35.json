{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from '@/api/auth';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      showRegister: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      verificationCode: '',\n      showVerification: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.token !== null;\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await api.login({\n          username: this.loginForm.username,\n          password: this.loginForm.password\n        });\n        if (response.data.message === 'Код 2FA отправлен на вашу почту.') {\n          this.showVerification = true;\n        }\n      } catch (error) {\n        console.error('Ошибка входа:', error);\n      }\n    },\n    async register() {\n      try {\n        await this.$store.dispatch('register', this.registerForm);\n        this.showRegister = false;\n      } catch (error) {\n        console.error('Registration error:', error);\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout');\n      this.$router.push('/');\n    },\n    async verifyCode() {\n      try {\n        const response = await api.verify2FA(this.verificationCode);\n        if (response.data.message === 'Успешная аутентификация.') {\n          // Перенаправление на главную страницу или другую защищенную страницу\n          this.$router.push('/home');\n        }\n      } catch (error) {\n        console.error('Ошибка проверки кода 2FA:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","showRegister","loginForm","username","password","registerForm","email","verificationCode","showVerification","computed","isLoggedIn","$store","state","token","methods","login","response","message","error","console","register","dispatch","logout","$router","push","verifyCode","verify2FA"],"sources":["C:\\Users\\Ясырь\\Documents\\GitHub\\Where2Go\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav v-if=\"isLoggedIn\" class=\"navbar\">\n      <router-link to=\"/\">Главная</router-link> |\n      <router-link to=\"/setup-2fa\">Настройка 2FA</router-link> |\n      <a href=\"#\" @click.prevent=\"logout\">Выйти</a>\n    </nav>\n\n    <div v-else class=\"auth-container\">\n      <div class=\"auth-buttons\" v-if=\"!showRegister\">\n        <h2>Вход</h2>\n        <form @submit.prevent=\"login\">\n          <input \n            v-model=\"loginForm.username\" \n            type=\"text\" \n            placeholder=\"Имя пользователя\"\n            required\n          >\n          <input \n            v-model=\"loginForm.password\" \n            type=\"password\" \n            placeholder=\"Пароль\"\n            required\n          >\n          <button type=\"submit\">Войти</button>\n        </form>\n        <p>\n          Нет аккаунта? \n          <a href=\"#\" @click.prevent=\"showRegister = true\">Зарегистрироваться</a>\n        </p>\n      </div>\n\n      <div class=\"auth-buttons\" v-else>\n        <h2>Регистрация</h2>\n        <form @submit.prevent=\"register\">\n          <input \n            v-model=\"registerForm.username\" \n            type=\"text\" \n            placeholder=\"Имя пользователя\"\n            required\n          >\n          <input \n            v-model=\"registerForm.email\" \n            type=\"email\" \n            placeholder=\"Email\"\n            required\n          >\n          <input \n            v-model=\"registerForm.password\" \n            type=\"password\" \n            placeholder=\"Пароль\"\n            required\n          >\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n        <p>\n          Уже есть аккаунт? \n          <a href=\"#\" @click.prevent=\"showRegister = false\">Войти</a>\n        </p>\n      </div>\n\n      <div v-if=\"showVerification\">\n        <h3>Введите код 2FA</h3>\n        <input v-model=\"verificationCode\" type=\"text\" placeholder=\"Код 2FA\" />\n        <button @click=\"verifyCode\">Подтвердить</button>\n      </div>\n    </div>\n\n    <router-view v-if=\"isLoggedIn\"/>\n  </div>\n</template>\n\n<script>\nimport api from '@/api/auth'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      showRegister: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      registerForm: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      verificationCode: '',\n      showVerification: false\n    }\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.token !== null\n    }\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await api.login({ username: this.loginForm.username, password: this.loginForm.password })\n        if (response.data.message === 'Код 2FA отправлен на вашу почту.') {\n          this.showVerification = true\n        }\n      } catch (error) {\n        console.error('Ошибка входа:', error)\n      }\n    },\n    async register() {\n      try {\n        await this.$store.dispatch('register', this.registerForm)\n        this.showRegister = false\n      } catch (error) {\n        console.error('Registration error:', error)\n      }\n    },\n    logout() {\n      this.$store.dispatch('logout')\n      this.$router.push('/')\n    },\n    async verifyCode() {\n      try {\n        const response = await api.verify2FA(this.verificationCode)\n        if (response.data.message === 'Успешная аутентификация.') {\n          // Перенаправление на главную страницу или другую защищенную страницу\n          this.$router.push('/home')\n        }\n      } catch (error) {\n        console.error('Ошибка проверки кода 2FA:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n.navbar {\n  padding: 20px;\n  background-color: #f8f9fa;\n  margin-bottom: 20px;\n}\n\n.navbar a {\n  color: #2c3e50;\n  text-decoration: none;\n  margin: 0 10px;\n}\n\n.navbar a:hover {\n  color: #42b983;\n}\n\n.auth-container {\n  max-width: 400px;\n  margin: 60px auto;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n}\n\n.auth-buttons form {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 20px 0;\n}\n\ninput {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n\na {\n  color: #42b983;\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAyEA,OAAOA,GAAE,MAAO,YAAW;AAE3B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;QACZF,QAAQ,EAAE,EAAE;QACZG,KAAK,EAAE,EAAE;QACTF,QAAQ,EAAE;MACZ,CAAC;MACDG,gBAAgB,EAAE,EAAE;MACpBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,KAAI,KAAM,IAAG;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,GAAG,CAACiB,KAAK,CAAC;UAAEZ,QAAQ,EAAE,IAAI,CAACD,SAAS,CAACC,QAAQ;UAAEC,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACE;QAAS,CAAC;QACzG,IAAIY,QAAQ,CAAChB,IAAI,CAACiB,OAAM,KAAM,kCAAkC,EAAE;UAChE,IAAI,CAACT,gBAAe,GAAI,IAAG;QAC7B;MACF,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK;MACtC;IACF,CAAC;IACD,MAAME,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAM,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAChB,YAAY;QACxD,IAAI,CAACJ,YAAW,GAAI,KAAI;MAC1B,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK;MAC5C;IACF,CAAC;IACDI,MAAMA,CAAA,EAAG;MACP,IAAI,CAACX,MAAM,CAACU,QAAQ,CAAC,QAAQ;MAC7B,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,GAAG;IACvB,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMT,QAAO,GAAI,MAAMlB,GAAG,CAAC4B,SAAS,CAAC,IAAI,CAACnB,gBAAgB;QAC1D,IAAIS,QAAQ,CAAChB,IAAI,CAACiB,OAAM,KAAM,0BAA0B,EAAE;UACxD;UACA,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,OAAO;QAC3B;MACF,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK;MAClD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}