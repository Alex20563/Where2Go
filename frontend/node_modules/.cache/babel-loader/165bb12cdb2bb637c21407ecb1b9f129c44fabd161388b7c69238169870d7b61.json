{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"two-factor-setup\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"setup-section\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"qr-section\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  class: \"verification\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.isEnabled ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Настройка двухфакторной аутентификации\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.setupTwoFactor && $options.setupTwoFactor(...args))\n  }, \"Включить 2FA\")])) : _createCommentVNode(\"v-if\", true), $data.showQRCode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Отсканируйте QR-код\", -1 /* HOISTED */)), _createElementVNode(\"div\", {\n    innerHTML: $data.qrCodeImage\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.verificationCode = $event),\n    type: \"text\",\n    placeholder: \"Введите код подтверждения\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.verificationCode]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.verifyCode && $options.verifyCode(...args))\n  }, \"Подтвердить\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","isEnabled","_hoisted_2","_createElementVNode","onClick","_cache","args","$options","setupTwoFactor","_createCommentVNode","showQRCode","_hoisted_3","innerHTML","qrCodeImage","_hoisted_4","_hoisted_5","$event","verificationCode","type","placeholder","verifyCode"],"sources":["C:\\Users\\Ясырь\\Documents\\GitHub\\Where2Go\\frontend\\src\\components\\TwoFactorSetup.vue"],"sourcesContent":["<template>\r\n  <div class=\"two-factor-setup\">\r\n    <div v-if=\"!isEnabled\" class=\"setup-section\">\r\n      <h2>Настройка двухфакторной аутентификации</h2>\r\n      <button @click=\"setupTwoFactor\">Включить 2FA</button>\r\n    </div>\r\n    \r\n    <div v-if=\"showQRCode\" class=\"qr-section\">\r\n      <h3>Отсканируйте QR-код</h3>\r\n      <div v-html=\"qrCodeImage\"></div>\r\n      <div class=\"verification\">\r\n        <input \r\n          v-model=\"verificationCode\" \r\n          type=\"text\" \r\n          placeholder=\"Введите код подтверждения\"\r\n        />\r\n        <button @click=\"verifyCode\">Подтвердить</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api/auth'\r\n\r\nexport default {\r\n  name: 'TwoFactorSetup',\r\n  data() {\r\n    return {\r\n      isEnabled: false,\r\n      showQRCode: false,\r\n      qrCodeImage: '',\r\n      verificationCode: '',\r\n      secret: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async setupTwoFactor() {\r\n      try {\r\n        const response = await api.generate2FASecret()\r\n        this.secret = response.data.secret\r\n        this.showQRCode = true\r\n        this.qrCodeImage = `https://chart.googleapis.com/chart?chs=200x200&chld=M|0&cht=qr&chl=otpauth://totp/Where2Go:${this.$store.state.username}?secret=${this.secret}&issuer=Where2Go`\r\n      } catch (error) {\r\n        console.error('Error setting up 2FA:', error)\r\n      }\r\n    },\r\n    \r\n    async verifyCode() {\r\n      try {\r\n        const response = await api.verify2FA(this.verificationCode)\r\n        if (response.data.message === '2FA verification successful') {\r\n          this.isEnabled = true\r\n          this.showQRCode = false\r\n          this.$emit('2fa-enabled')\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying 2FA code:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.two-factor-setup {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.setup-section, .qr-section {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.verification {\r\n  margin-top: 20px;\r\n}\r\n\r\ninput {\r\n  padding: 8px;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAD/BC,GAAA;EAE2BD,KAAK,EAAC;;;EAFjCC,GAAA;EAO2BD,KAAK,EAAC;;mBAPjC;;EAUWA,KAAK,EAAC;AAAc;;uBAT7BE,mBAAA,CAkBM,OAlBNC,UAkBM,G,CAjBQC,KAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAGM,OAHNI,UAGM,G,0BAFJC,mBAAA,CAA+C,YAA3C,wCAAsC,sBAC1CA,mBAAA,CAAqD;IAA5CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,cAAY,E,KAJlDG,mBAAA,gBAOeT,KAAA,CAAAU,UAAU,I,cAArBZ,mBAAA,CAWM,OAXNa,UAWM,G,0BAVJR,mBAAA,CAA4B,YAAxB,qBAAmB,sBACvBA,mBAAA,CAAgC;IAA3BS,SAAoB,EAAZZ,KAAA,CAAAa;EAAW,wBAT9BC,UAAA,GAUMX,mBAAA,CAOM,OAPNY,UAOM,G,gBANJZ,mBAAA,CAIE;IAfV,uBAAAE,MAAA,QAAAA,MAAA,MAAAW,MAAA,IAYmBhB,KAAA,CAAAiB,gBAAgB,GAAAD,MAAA;IACzBE,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHnB,KAAA,CAAAiB,gBAAgB,E,GAI3Bd,mBAAA,CAAgD;IAAvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAa,UAAA,IAAAb,QAAA,CAAAa,UAAA,IAAAd,IAAA,CAAU;KAAE,aAAW,E,OAhB/CG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}