{"ast":null,"code":"import api from '@/api/auth';\nexport default {\n  name: 'TwoFactorSetup',\n  data() {\n    return {\n      isEnabled: false,\n      showVerification: false,\n      verificationCode: ''\n    };\n  },\n  methods: {\n    async setupTwoFactor() {\n      try {\n        await api.generate2FASecret();\n        this.showVerification = true;\n      } catch (error) {\n        console.error('Error setting up 2FA:', error);\n      }\n    },\n    async verifyCode() {\n      try {\n        const response = await api.verify2FA(this.verificationCode);\n        if (response.data.message === '2FA verification successful') {\n          this.isEnabled = true;\n          this.showVerification = false;\n          this.$emit('2fa-enabled');\n        }\n      } catch (error) {\n        console.error('Error verifying 2FA code:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","isEnabled","showVerification","verificationCode","methods","setupTwoFactor","generate2FASecret","error","console","verifyCode","response","verify2FA","message","$emit"],"sources":["C:\\Users\\Ясырь\\Documents\\GitHub\\Where2Go\\frontend\\src\\components\\TwoFactorSetup.vue"],"sourcesContent":["<template>\r\n  <div class=\"two-factor-setup\">\r\n    <div v-if=\"!isEnabled\" class=\"setup-section\">\r\n      <h2>Настройка двухфакторной аутентификации</h2>\r\n      <button @click=\"setupTwoFactor\">Отправить код на почту</button>\r\n    </div>\r\n    \r\n    <div v-if=\"showVerification\" class=\"verification-section\">\r\n      <h3>Введите код из электронной почты</h3>\r\n      <input \r\n        v-model=\"verificationCode\" \r\n        type=\"text\" \r\n        placeholder=\"Введите код подтверждения\"\r\n      />\r\n      <button @click=\"verifyCode\">Подтвердить</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api/auth'\r\n\r\nexport default {\r\n  name: 'TwoFactorSetup',\r\n  data() {\r\n    return {\r\n      isEnabled: false,\r\n      showVerification: false,\r\n      verificationCode: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async setupTwoFactor() {\r\n      try {\r\n        await api.generate2FASecret()\r\n        this.showVerification = true\r\n      } catch (error) {\r\n        console.error('Error setting up 2FA:', error)\r\n      }\r\n    },\r\n    \r\n    async verifyCode() {\r\n      try {\r\n        const response = await api.verify2FA(this.verificationCode)\r\n        if (response.data.message === '2FA verification successful') {\r\n          this.isEnabled = true\r\n          this.showVerification = false\r\n          this.$emit('2fa-enabled')\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying 2FA code:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.two-factor-setup {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.setup-section, .qr-section {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.verification {\r\n  margin-top: 20px;\r\n}\r\n\r\ninput {\r\n  padding: 8px;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n  padding: 8px 16px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":"AAoBA,OAAOA,GAAE,MAAO,YAAW;AAE3B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,gBAAgB,EAAE,KAAK;MACvBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMP,GAAG,CAACQ,iBAAiB,CAAC;QAC5B,IAAI,CAACJ,gBAAe,GAAI,IAAG;MAC7B,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK;MAC9C;IACF,CAAC;IAED,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,GAAG,CAACa,SAAS,CAAC,IAAI,CAACR,gBAAgB;QAC1D,IAAIO,QAAQ,CAACV,IAAI,CAACY,OAAM,KAAM,6BAA6B,EAAE;UAC3D,IAAI,CAACX,SAAQ,GAAI,IAAG;UACpB,IAAI,CAACC,gBAAe,GAAI,KAAI;UAC5B,IAAI,CAACW,KAAK,CAAC,aAAa;QAC1B;MACF,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK;MAClD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}