{"ast":null,"code":"import { createStore } from 'vuex';\nimport api from '@/api/auth';\nexport default createStore({\n  state: {\n    token: localStorage.getItem('token') || null,\n    username: localStorage.getItem('username') || null\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    setUsername(state, username) {\n      state.username = username;\n      localStorage.setItem('username', username);\n    },\n    clearAuth(state) {\n      state.token = null;\n      state.username = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      const response = await api.login(credentials);\n      commit('setToken', response.data.token);\n      commit('setUsername', credentials.username);\n    },\n    async register(_, userData) {\n      await api.register(userData);\n    },\n    logout({\n      commit\n    }) {\n      commit('clearAuth');\n    }\n  }\n});","map":{"version":3,"names":["createStore","api","state","token","localStorage","getItem","username","mutations","setToken","setItem","setUsername","clearAuth","removeItem","actions","login","commit","credentials","response","data","register","_","userData","logout"],"sources":["C:/Users/Ясырь/Documents/GitHub/Where2Go/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport api from '@/api/auth'\r\n\r\nexport default createStore({\r\n  state: {\r\n    token: localStorage.getItem('token') || null,\r\n    username: localStorage.getItem('username') || null\r\n  },\r\n  mutations: {\r\n    setToken(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('token', token)\r\n    },\r\n    setUsername(state, username) {\r\n      state.username = username\r\n      localStorage.setItem('username', username)\r\n    },\r\n    clearAuth(state) {\r\n      state.token = null\r\n      state.username = null\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('username')\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      const response = await api.login(credentials)\r\n      commit('setToken', response.data.token)\r\n      commit('setUsername', credentials.username)\r\n    },\r\n    async register(_, userData) {\r\n      await api.register(userData)\r\n    },\r\n    logout({ commit }) {\r\n      commit('clearAuth')\r\n    }\r\n  }\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,YAAY;AAE5B,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;IAC5CC,QAAQ,EAAEF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI;EAChD,CAAC;EACDE,SAAS,EAAE;IACTC,QAAQA,CAACN,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;MACnBC,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACtC,CAAC;IACDO,WAAWA,CAACR,KAAK,EAAEI,QAAQ,EAAE;MAC3BJ,KAAK,CAACI,QAAQ,GAAGA,QAAQ;MACzBF,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAC5C,CAAC;IACDK,SAASA,CAACT,KAAK,EAAE;MACfA,KAAK,CAACC,KAAK,GAAG,IAAI;MAClBD,KAAK,CAACI,QAAQ,GAAG,IAAI;MACrBF,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAChCR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;IACrC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEC,WAAW,EAAE;MACnC,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACa,KAAK,CAACE,WAAW,CAAC;MAC7CD,MAAM,CAAC,UAAU,EAAEE,QAAQ,CAACC,IAAI,CAACf,KAAK,CAAC;MACvCY,MAAM,CAAC,aAAa,EAAEC,WAAW,CAACV,QAAQ,CAAC;IAC7C,CAAC;IACD,MAAMa,QAAQA,CAACC,CAAC,EAAEC,QAAQ,EAAE;MAC1B,MAAMpB,GAAG,CAACkB,QAAQ,CAACE,QAAQ,CAAC;IAC9B,CAAC;IACDC,MAAMA,CAAC;MAAEP;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,WAAW,CAAC;IACrB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}