{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token'); // Получаем токен из localStorage\n  return {\n    headers: {\n      Authorization: `Token ${token}` // Добавляем токен в заголовок\n    }\n  };\n};\nexport default {\n  login(credentials) {\n    return axios.post(`${API_URL}/login/`, credentials);\n  },\n  register(userData) {\n    return axios.post(`${API_URL}/register/`, userData);\n  },\n  generate2FASecret() {\n    return axios.post(`${API_URL}/generate-2fa-secret/`, {}, getAuthHeaders()); // Добавляем заголовки\n  },\n  verify2FA(code) {\n    return axios.post(`${API_URL}/verify-2fa/`, {\n      code\n    }, getAuthHeaders()); // Добавляем заголовки\n  },\n  updateUser(data) {\n    return axios.post(`${API_URL}/update-user/`, data, getAuthHeaders()); // Добавляем заголовки\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAuthHeaders","token","localStorage","getItem","headers","Authorization","login","credentials","post","register","userData","generate2FASecret","verify2FA","code","updateUser","data"],"sources":["C:/Users/Ясырь/Documents/GitHub/Where2Go/frontend/src/api/auth.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:8000/api'\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token')  // Получаем токен из localStorage\r\n  return {\r\n    headers: {\r\n      Authorization: `Token ${token}`  // Добавляем токен в заголовок\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  login(credentials) {\r\n    return axios.post(`${API_URL}/login/`, credentials)\r\n  },\r\n  register(userData) {\r\n    return axios.post(`${API_URL}/register/`, userData)\r\n  },\r\n  generate2FASecret() {\r\n    return axios.post(`${API_URL}/generate-2fa-secret/`, {}, getAuthHeaders())  // Добавляем заголовки\r\n  },\r\n  verify2FA(code) {\r\n    return axios.post(`${API_URL}/verify-2fa/`, { code }, getAuthHeaders())  // Добавляем заголовки\r\n  },\r\n  updateUser(data) {\r\n    return axios.post(`${API_URL}/update-user/`, data, getAuthHeaders())  // Добавляем заголовки\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;EAC7C,OAAO;IACLC,OAAO,EAAE;MACPC,aAAa,EAAE,SAASJ,KAAK,EAAE,CAAE;IACnC;EACF,CAAC;AACH,CAAC;AAED,eAAe;EACbK,KAAKA,CAACC,WAAW,EAAE;IACjB,OAAOT,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,SAAS,EAAEQ,WAAW,CAAC;EACrD,CAAC;EACDE,QAAQA,CAACC,QAAQ,EAAE;IACjB,OAAOZ,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,YAAY,EAAEW,QAAQ,CAAC;EACrD,CAAC;EACDC,iBAAiBA,CAAA,EAAG;IAClB,OAAOb,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,uBAAuB,EAAE,CAAC,CAAC,EAAEC,cAAc,CAAC,CAAC,CAAC,EAAE;EAC9E,CAAC;EACDY,SAASA,CAACC,IAAI,EAAE;IACd,OAAOf,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAE;MAAEc;IAAK,CAAC,EAAEb,cAAc,CAAC,CAAC,CAAC,EAAE;EAC3E,CAAC;EACDc,UAAUA,CAACC,IAAI,EAAE;IACf,OAAOjB,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,eAAe,EAAEgB,IAAI,EAAEf,cAAc,CAAC,CAAC,CAAC,EAAE;EACxE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}